def get_simplicial_complex():
    vertices = [[i] for i in range(8)]
    edges = [[0,i] for i in range(1,8)]
    edges += [[3,4],[1,3],[1,4],[2,4],
              [4,7],[2,7],[1,7],[1,6],
              [6,7],[5,7],[2,6],[2,5],
              [5,6],[1,5],[3,5],[4,5],
              [1,2]]
    triangles = [[0,2,5],[0,5,6],[0,2,6],
                 [1,2,5],[1,3,5],[3,4,5],
                 [0,1,3],[0,3,4],[0,1,4],
                 [1,2,4],[2,4,7],
                 [0,2,7],[0,1,7],
                 [1,2,6],[1,6,7],[5,6,7],
                 [4,5,7]]
    return vertices+edges+triangles

def get_dunce_hat_with_flaps():
    vertices = [[i] for i in range(10)]
    edges = [[0,i] for i in range(1,8)]
    edges += [[3,4],[1,3],[1,4],[2,4],
              [4,7],[2,7],[1,7],[1,6],
              [6,7],[5,7],[2,6],[2,5],
              [5,6],[1,5],[3,5],[4,5],
              [1,2],
              [2,8], [1,9], [1,8], [8,9]
              ]
    triangles = [[0,2,5],[0,5,6],[0,2,6],
                 [1,2,5],[1,3,5],[3,4,5],
                 [0,1,3],[0,3,4],[0,1,4],
                 [1,2,4],[2,4,7],
                 [0,2,7],[0,1,7],
                 [1,2,6],[1,6,7],[5,6,7],
                 [4,5,7],
                 [1,2,8],[1,8,9]]
    return vertices+edges+triangles

def get_optimal_matching():
    v_e = [[[i],[0,i]] for i in range (1,8)]
    e_t = [[[2,5],[0,2,5]], [[5,6],[0,5,6]], [[2,6],[0,2,6]],
           [[4,5],[3,4,5]], [[3,5],[1,3,5]], [[1,5],[1,2,5]],
           [[1,3],[0,1,3]], [[3,4],[0,3,4]], [[1,4],[0,1,4]],
           [[4,7],[2,4,7]], [[2,4],[1,2,4]],
           [[2,7],[0,2,7]], [[1,7],[0,1,7]],
           [[5,7],[5,6,7]], [[6,7],[1,6,7]], [[1,6],[1,2,6]]]
    return v_e + e_t

def get_optimal_matching_for_flaps():
    v_e = [[[i],[0,i]] for i in range (1,8)]
    v_e += [[[8],[2,8]], [[9],[1,9]]]
    e_t = [[[2,5],[0,2,5]], [[5,6],[0,5,6]], [[2,6],[0,2,6]],
           [[4,5],[3,4,5]], [[3,5],[1,3,5]], [[1,5],[1,2,5]],
           [[1,3],[0,1,3]], [[3,4],[0,3,4]], [[1,4],[0,1,4]],
           [[4,7],[2,4,7]], [[2,4],[1,2,4]],
           [[2,7],[0,2,7]], [[1,7],[0,1,7]],
           [[5,7],[5,6,7]], [[6,7],[1,6,7]], [[1,6],[1,2,6]],
           [[1,2],[1,2,8]], [[1,8],[1,8,9]]]
    return v_e + e_t
